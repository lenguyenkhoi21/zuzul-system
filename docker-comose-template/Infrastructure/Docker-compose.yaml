version: '3.9'
services:
  # ========================== Infrastructure ===============================
  # ELK-Stack
  elasticsearch-monitor:
    image: elasticsearch:7.14.2
    container_name: elasticsearch-monitor
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - <Your folder>:/usr/share/elasticsearch/data
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3

  logstash-server:
    image: logstash:7.14.2
    container_name: logstash-server
    ports:
      - '5000:5000'
    volumes:
      - <Your folder>:/usr/share/logstash/pipeline
      - <Your folder>:/usr/share/logstash/config/logstash.yml
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9600 || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      elasticsearch-monitor:
        condition: service_healthy

  kibana-sever:
    image: kibana:7.14.2
    container_name: kibana-server
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-monitor:9200
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:5601 || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      elasticsearch-monitor:
        condition: service_healthy

  # Tracing
  zipkin-server:
    image: openzipkin/zipkin:latest
    container_name: zipkin-server
    ports:
      - '9411:9411'
    depends_on:
      elasticsearch-monitor:
        condition: service_healthy

  # Security
  postgresql:
    image: docker.io/bitnami/postgresql:11
    container_name: postgresql
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    volumes:
      - <Your folder>:/bitnami/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: docker.io/bitnami/keycloak:15
    container_name: keycloak
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/auth/realms/master"]
      interval: 30s
      timeout: 3s
      retries: 3
    ports:
      - "8080:8080"

  # Database For Services
  mongodb-product:
    image: mongo:latest
    container_name: mongodb-product
    volumes:
      - <Your folder>:/data/db
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]

  mongodb-user:
    image: mongo:latest
    container_name: mongodb-user
    volumes:
      - <Your folder>:/data/db
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]

  neo4j-relationship:
    image: neo4j:latest
    container_name: neo4j-relationship
    volumes:
      - <Your folder>:/data
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]

  redis-pub-sub:
    image: redis:latest
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  cassandra-message:
    image: cassandra:latest
    volumes:
      - <Your folder>:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 5s
      timeout: 10s
      retries: 6
